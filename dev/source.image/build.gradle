/*******************************************************************************
 * Copyright (c) 2019 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

import java.util.jar.Manifest

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.wasdev.wlp.gradle.plugins',
                  name: 'liberty-gradle-plugin',
                  version: '2.7'
    }
}

// Obtain 'installLiberty'
apply plugin: 'liberty'

// Obtain 'clean'
apply plugin: 'java'

// May be needed? 
//apply plugin: 'base'

repositories {
    mavenCentral()
}

configurations {
    toCopy
}
dependencies {
   libertyRuntime 'io.openliberty:openliberty-webProfile8:20.0.0.1'
   toCopy 'jakarta.servlet:jakarta.servlet-api:5.0.0-M1'
}

liberty {
    server {

        //Only contains the servlet-4.0 feature
        configFile = file('config/server.xml')

        // May not be necessary? 
        features {
            acceptLicense = true
        }

        packageLiberty {
            archive = "minified_20.0.0.1.zip"
            include = "minify"
        }

    }
}

task unzipImage(type: Copy) {
    def zipFile = file('minified_20.0.0.1.zip')
    def outputDir = file("mini-image")

    from zipTree(zipFile)
    into outputDir
}

task getImage{
    doLast {
        println "Retrieved Libety and created minified image"
    }
}

task download(type: Copy) {
    from configurations.toCopy 
    into 'mini-image/wlp/dev/api/spec'
    doLast {
        println "Downloaded Jarkarta M1 Servlet Jar"
    }
}

task unzipJakarta(type:Copy){
    from zipTree("mini-image/wlp/dev/api/spec/jakarta.servlet-api-5.0.0-M1.jar")
    into "$buildDir/tmp/"   
}

task copyResourcePackage(type: Copy) {
    def subDir = "javax/servlet/resources/"
    from zipTree("mini-image/wlp/dev/api/spec/com.ibm.websphere.javaee.servlet.4.0_1.0.36.jar").matching {include "$subDir/**"}
    into "$buildDir/tmp/"                        
    eachFile { fcp ->
        fcp.path = fcp.path.replaceFirst("javax", 'jakarta')
    }
    includeEmptyDirs false
    doLast {
        println "Retrieved servlet.resources from the ibm servlet api jar."
        addExport()
    }
}

task zipJakarta(type: Zip) {
    archiveFileName = "jakarta.servlet-api-5.0.0-1.jar"
    from "$buildDir/tmp"
    destinationDirectory = file("mini-image/wlp/dev/api/spec/")

    doLast {
       delete "$buildDir/tmp" 
       println "Repackaged jakarta m1 servlet with jakarta.servlet.resources."
    }
}

task addJakarta() {
    doLast {
        println "Jarkarta added succesfullly to minified liberty image"
    }
}


//HELPER METHOD 
def addExport() {
    def is = new File("build/tmp/META-INF/MANIFEST.MF").newInputStream()
    Manifest manifest = new Manifest(is);
    for(Object key : manifest.getMainAttributes().keySet()){
        if(key.toString().indexOf("Export-Package") == 0){
            String value =  manifest.getMainAttributes().get(key)
             manifest.getMainAttributes().put(key, value + ',jakarta.servlet.resources;version="5.0.0"')
        } 
    }
    OutputStream os = new FileOutputStream("build/tmp/META-INF/MANIFEST.MF");
    manifest.write(os)

    println "Added `jakarta.servlet.resources` to the  Export-Package Manifest attribute"
}


//Downloads and setups Jakarta Servlet Image
addJakarta.dependsOn zipJakarta
zipJakarta.dependsOn copyResourcePackage
copyResourcePackage.dependsOn unzipJakarta
unzipJakarta.dependsOn download


//Downloads Libety Image & Minifies it
getImage.dependsOn unzipImage
unzipImage.dependsOn libertyPackage
libertyPackage.dependsOn libertyCreate
libertyCreate.dependsOn installLiberty


addJakarta.mustRunAfter getImage

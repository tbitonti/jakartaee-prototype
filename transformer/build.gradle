plugins {
  id 'java-library'
  id 'eclipse'
  id 'maven-publish'
  id 'application'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group = 'org.eclipse.transformer'
version = '0.1.0-SNAPSHOT'

configurations {
  archive.extendsFrom(implementation)
  archive.extendsFrom(runtimeOnly)
  archive.extendsFrom(testImplementation)
}

dependencies {
  implementation 'biz.aQute.bnd:biz.aQute.bnd.transform:5.1.0-SNAPSHOT'
  implementation 'commons-cli:commons-cli:1.4'

  runtimeOnly 'org.slf4j:slf4j-simple:1.7.29'

  testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
  testImplementation 'org.assertj:assertj-core:3.16.1'

  testImplementation 'javax.annotation:javax.annotation-api:1.3.2'
  testImplementation 'javax.inject:javax.inject:1'
  testImplementation 'javax.servlet:javax.servlet-api:4.0.1'

  testImplementation 'jakarta.annotation:jakarta.annotation-api:2.0.0-RC1'
  testImplementation 'jakarta.inject:jakarta.inject-api:2.0.0-RC2'
  testImplementation 'jakarta.servlet:jakarta.servlet-api:5.0.0-M1'
  testImplementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:2.3.6'
  testImplementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:1.2.7'

  testImplementation 'jakarta.management.j2ee:jakarta.management.j2ee-api:1.1.4'
}

application {
  mainClassName = 'org.eclipse.transformer.jakarta.JakartaTransformer'
}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.register('testJar', Jar) {
  archiveClassifier = "test"
  from sourceSets.test.output
}

tasks.register('showArchives') {
  doLast {
    configurations.archive.each {
      println it
    }
  }
}

tasks.register('downloadArchives', Copy) {
  into project.layout.buildDirectory.dir('archives')
  from configurations.archive
}

publishing {
  publications {
    mavenJava(MavenPublication) {
	  artifactId = 'transformer'
	  from components.java

    versionMapping {
      usage('java-api') {
        fromResolutionOf('runtimeClasspath')
      }
      usage('java-runtime') {
        fromResolutionResult()
      }
    }

		pom {
			name = 'Eclipse Jakarta EE Transformer'
			description = 'A library to perform the transformation from javax to jakarta'
			url = 'http://github.com/tbitonti/jakartaee-prototype'
			licenses {
				license {
					name = 'The Apache License, Version 2.0'
					url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
				}
			}
			scm {
				connection = 'scm:git:git@github.com:tbitonti/jakartaee-prototype.git'
				developerConnection = 'scm:git:git@github.com:tbitonti/jakartaee-prototype.git'
				url = 'http://github.com/tbitonti/jakartaee-prototype'
			}
		}
	}
  }
}

